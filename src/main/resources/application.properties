#tomcat访问端口
server.port=8081
#server.servlet.context-path=/clinbrain/api
server.servlet.thread-context-inheritable=true
#日志
logging.level.tk.mybatis=TRACE
#数据源配置信息
datasource.initialSize=5
datasource.minIdle=5
datasource.maxActive=20
datasource.testOnBorrow=true
datasource.filters=stat,wall
#数据源名称
jdbc.datasources=ds,ds1
#从数据源1
jdbc.ds.type=com.alibaba.druid.pool.DruidDataSource
jdbc.ds.driverClassName=com.mysql.jdbc.Driver
jdbc.ds.url=jdbc:mysql://192.168.6.248:3306/test?serverTimezone=GMT%2B8&characterEncoding=utf-8&useSSL=false
jdbc.ds.username=root
jdbc.ds.password=865151
jdbc.ds1.type=com.alibaba.druid.pool.DruidDataSource
jdbc.ds1.driverClassName=com.mysql.jdbc.Driver
jdbc.ds1.url=jdbc:mysql://192.168.5.149:3306/tao?characterEncoding=utf-8&useSSL=false
jdbc.ds1.username=root
jdbc.ds1.password=123456
mybatis.type-aliases-package=com.mywuwu.entity
mybatis.mapper-locations=classpath*:mapper/*.xml
mapper.mappers=com.mywuwu.common.mapper.MyMapper
mapper.not-empty=false
mapper.identity=MYSQL
#分页配置
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count\=countSql
#系统配置 版本控制不需要复制的表
sys.version.exclusion=version_control,meta_data_log
#============== kafka ===================
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=192.168.153.135:9092
#=============== provider  =======================
spring.kafka.producer.retries=0
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
# 指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.acks=all
#=============== consumer  =======================
# 指定默认消费者group id
spring.kafka.consumer.group-id=test-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100
spring.kafka.consumer.auto-session-timeout=30000
# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
